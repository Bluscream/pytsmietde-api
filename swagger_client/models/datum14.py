# coding: utf-8

"""
    Pietsmiet.de API

    OpenAPI spec generated from HAR data for www.pietsmiet.de on 2024-09-03T03:22:16.459Z  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Datum14(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_at': 'datetime',
        'external_url': 'str',
        'id': 'int',
        'live': 'int',
        'service': 'int',
        'stream_game': 'object',
        'stream_id': 'str',
        'stream_started_at': 'datetime',
        'stream_thumbnail': 'str',
        'stream_title': 'str',
        'stream_viewer_count': 'int',
        'type': 'int',
        'updated_at': 'datetime',
        'user_avatar': 'str',
        'user_banner': 'str',
        'user_description': 'str',
        'user_display_name': 'str',
        'user_id': 'int',
        'user_name': 'str',
        'user_type': 'str'
    }

    attribute_map = {
        'created_at': 'created_at',
        'external_url': 'external_url',
        'id': 'id',
        'live': 'live',
        'service': 'service',
        'stream_game': 'stream_game',
        'stream_id': 'stream_id',
        'stream_started_at': 'stream_started_at',
        'stream_thumbnail': 'stream_thumbnail',
        'stream_title': 'stream_title',
        'stream_viewer_count': 'stream_viewer_count',
        'type': 'type',
        'updated_at': 'updated_at',
        'user_avatar': 'user_avatar',
        'user_banner': 'user_banner',
        'user_description': 'user_description',
        'user_display_name': 'user_display_name',
        'user_id': 'user_id',
        'user_name': 'user_name',
        'user_type': 'user_type'
    }

    def __init__(self, created_at=None, external_url=None, id=None, live=None, service=None, stream_game=None, stream_id=None, stream_started_at=None, stream_thumbnail=None, stream_title=None, stream_viewer_count=None, type=None, updated_at=None, user_avatar=None, user_banner=None, user_description=None, user_display_name=None, user_id=None, user_name=None, user_type=None):  # noqa: E501
        """Datum14 - a model defined in Swagger"""  # noqa: E501
        self._created_at = None
        self._external_url = None
        self._id = None
        self._live = None
        self._service = None
        self._stream_game = None
        self._stream_id = None
        self._stream_started_at = None
        self._stream_thumbnail = None
        self._stream_title = None
        self._stream_viewer_count = None
        self._type = None
        self._updated_at = None
        self._user_avatar = None
        self._user_banner = None
        self._user_description = None
        self._user_display_name = None
        self._user_id = None
        self._user_name = None
        self._user_type = None
        self.discriminator = None
        if created_at is not None:
            self.created_at = created_at
        if external_url is not None:
            self.external_url = external_url
        if id is not None:
            self.id = id
        if live is not None:
            self.live = live
        if service is not None:
            self.service = service
        if stream_game is not None:
            self.stream_game = stream_game
        if stream_id is not None:
            self.stream_id = stream_id
        if stream_started_at is not None:
            self.stream_started_at = stream_started_at
        if stream_thumbnail is not None:
            self.stream_thumbnail = stream_thumbnail
        if stream_title is not None:
            self.stream_title = stream_title
        if stream_viewer_count is not None:
            self.stream_viewer_count = stream_viewer_count
        if type is not None:
            self.type = type
        if updated_at is not None:
            self.updated_at = updated_at
        if user_avatar is not None:
            self.user_avatar = user_avatar
        if user_banner is not None:
            self.user_banner = user_banner
        if user_description is not None:
            self.user_description = user_description
        if user_display_name is not None:
            self.user_display_name = user_display_name
        if user_id is not None:
            self.user_id = user_id
        if user_name is not None:
            self.user_name = user_name
        if user_type is not None:
            self.user_type = user_type

    @property
    def created_at(self):
        """Gets the created_at of this Datum14.  # noqa: E501


        :return: The created_at of this Datum14.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Datum14.


        :param created_at: The created_at of this Datum14.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def external_url(self):
        """Gets the external_url of this Datum14.  # noqa: E501


        :return: The external_url of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._external_url

    @external_url.setter
    def external_url(self, external_url):
        """Sets the external_url of this Datum14.


        :param external_url: The external_url of this Datum14.  # noqa: E501
        :type: str
        """

        self._external_url = external_url

    @property
    def id(self):
        """Gets the id of this Datum14.  # noqa: E501


        :return: The id of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Datum14.


        :param id: The id of this Datum14.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def live(self):
        """Gets the live of this Datum14.  # noqa: E501


        :return: The live of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._live

    @live.setter
    def live(self, live):
        """Sets the live of this Datum14.


        :param live: The live of this Datum14.  # noqa: E501
        :type: int
        """

        self._live = live

    @property
    def service(self):
        """Gets the service of this Datum14.  # noqa: E501


        :return: The service of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this Datum14.


        :param service: The service of this Datum14.  # noqa: E501
        :type: int
        """

        self._service = service

    @property
    def stream_game(self):
        """Gets the stream_game of this Datum14.  # noqa: E501


        :return: The stream_game of this Datum14.  # noqa: E501
        :rtype: object
        """
        return self._stream_game

    @stream_game.setter
    def stream_game(self, stream_game):
        """Sets the stream_game of this Datum14.


        :param stream_game: The stream_game of this Datum14.  # noqa: E501
        :type: object
        """

        self._stream_game = stream_game

    @property
    def stream_id(self):
        """Gets the stream_id of this Datum14.  # noqa: E501


        :return: The stream_id of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this Datum14.


        :param stream_id: The stream_id of this Datum14.  # noqa: E501
        :type: str
        """

        self._stream_id = stream_id

    @property
    def stream_started_at(self):
        """Gets the stream_started_at of this Datum14.  # noqa: E501


        :return: The stream_started_at of this Datum14.  # noqa: E501
        :rtype: datetime
        """
        return self._stream_started_at

    @stream_started_at.setter
    def stream_started_at(self, stream_started_at):
        """Sets the stream_started_at of this Datum14.


        :param stream_started_at: The stream_started_at of this Datum14.  # noqa: E501
        :type: datetime
        """

        self._stream_started_at = stream_started_at

    @property
    def stream_thumbnail(self):
        """Gets the stream_thumbnail of this Datum14.  # noqa: E501


        :return: The stream_thumbnail of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._stream_thumbnail

    @stream_thumbnail.setter
    def stream_thumbnail(self, stream_thumbnail):
        """Sets the stream_thumbnail of this Datum14.


        :param stream_thumbnail: The stream_thumbnail of this Datum14.  # noqa: E501
        :type: str
        """

        self._stream_thumbnail = stream_thumbnail

    @property
    def stream_title(self):
        """Gets the stream_title of this Datum14.  # noqa: E501


        :return: The stream_title of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._stream_title

    @stream_title.setter
    def stream_title(self, stream_title):
        """Sets the stream_title of this Datum14.


        :param stream_title: The stream_title of this Datum14.  # noqa: E501
        :type: str
        """

        self._stream_title = stream_title

    @property
    def stream_viewer_count(self):
        """Gets the stream_viewer_count of this Datum14.  # noqa: E501


        :return: The stream_viewer_count of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._stream_viewer_count

    @stream_viewer_count.setter
    def stream_viewer_count(self, stream_viewer_count):
        """Sets the stream_viewer_count of this Datum14.


        :param stream_viewer_count: The stream_viewer_count of this Datum14.  # noqa: E501
        :type: int
        """

        self._stream_viewer_count = stream_viewer_count

    @property
    def type(self):
        """Gets the type of this Datum14.  # noqa: E501


        :return: The type of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Datum14.


        :param type: The type of this Datum14.  # noqa: E501
        :type: int
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this Datum14.  # noqa: E501


        :return: The updated_at of this Datum14.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Datum14.


        :param updated_at: The updated_at of this Datum14.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def user_avatar(self):
        """Gets the user_avatar of this Datum14.  # noqa: E501


        :return: The user_avatar of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_avatar

    @user_avatar.setter
    def user_avatar(self, user_avatar):
        """Sets the user_avatar of this Datum14.


        :param user_avatar: The user_avatar of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_avatar = user_avatar

    @property
    def user_banner(self):
        """Gets the user_banner of this Datum14.  # noqa: E501


        :return: The user_banner of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_banner

    @user_banner.setter
    def user_banner(self, user_banner):
        """Sets the user_banner of this Datum14.


        :param user_banner: The user_banner of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_banner = user_banner

    @property
    def user_description(self):
        """Gets the user_description of this Datum14.  # noqa: E501


        :return: The user_description of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_description

    @user_description.setter
    def user_description(self, user_description):
        """Sets the user_description of this Datum14.


        :param user_description: The user_description of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_description = user_description

    @property
    def user_display_name(self):
        """Gets the user_display_name of this Datum14.  # noqa: E501


        :return: The user_display_name of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_display_name

    @user_display_name.setter
    def user_display_name(self, user_display_name):
        """Sets the user_display_name of this Datum14.


        :param user_display_name: The user_display_name of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_display_name = user_display_name

    @property
    def user_id(self):
        """Gets the user_id of this Datum14.  # noqa: E501


        :return: The user_id of this Datum14.  # noqa: E501
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Datum14.


        :param user_id: The user_id of this Datum14.  # noqa: E501
        :type: int
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this Datum14.  # noqa: E501


        :return: The user_name of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this Datum14.


        :param user_name: The user_name of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def user_type(self):
        """Gets the user_type of this Datum14.  # noqa: E501


        :return: The user_type of this Datum14.  # noqa: E501
        :rtype: str
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this Datum14.


        :param user_type: The user_type of this Datum14.  # noqa: E501
        :type: str
        """

        self._user_type = user_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Datum14, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Datum14):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
